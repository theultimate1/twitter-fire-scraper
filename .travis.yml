language: python

cache:

  - pip
  - npm

  - directories:
      - ${HOME}/virtualenv/
      - ${HOME}/.npm
      - ${HOME}/.cache/
      - ${HOME}/Library/Caches/Homebrew


matrix:

  fast_finish: true

  include:

    - os: linux
      dist: xenial
      python: "3.4"

    - os: linux
      dist: xenial
      python: "3.7"

    - os: osx
      language: generic
      env: PYTHON=3.4.4

  allow_failures:
    - os: osx

addons:
  apt:
    packages:
      - curl
      - build-essential
  homebrew:
    packages:
      - npm
      - mongodb

services:
  - mongodb

#deploy:
#
#  provider: heroku
#  app: vast-crag-22552
#
#  api_key:
#    secure: "J7SZnBO9E3YAWo0khsKXVM2v2pOl+Br9PW6Ve6Y+QGqTYwauyzfx4TK+l+Mcyk69UolUyS7mds4XtqpjEwMKFtwUtM/+54Z5UnHU1PYl4Q0eMOC2j/5Js9Ncy9v0LN1xMsDIMH+2WZGP6/kul7V7uSYajVTolnmXojp1TdZhCcfKJqy94Frs1kznkeJP9m05pEmTxwPXtTxQ0jPOBUu4grbZecgJNyqx+lfPk++LgYHgftNnnwl6f8ELQeacWbeZhV7OJm3HyLxIQObLpLvEyuvNWuzaI4fDnAT/dTHZ35miekbTKeeCS+eWPnRkYh5zx9ublPUBy7LI6wlGiYQUBrLBprUYvjUKUrzj5cK/39jrJR27Iz4pKpIUyQC1CYu6m9iV6Nb0M6HRThbrP5Gjb5Gjfd69rigx7lhoU19KqCeVUB9O6973ouEOcoli5FQLx7R1p07fwJbDpmoQqeEVmgYGHOBG1WnIAycjjdz9S+I8ddpWsfGbKkYIoHzKnfyQrIK9LDvf8vf2kDMtRCOSnMD0MTHpWUNvy0ZGA+kVS45Hbz3jUuZlzH+lIT2IvH2KgH5+fPgT+O92VzZQEAD7BpaN9EOfa+Ky63DAktC16r5e2sydNbki3PqFycuS4JeTJ7GV2I8yGLHJpGLaiXhJH+ptECh/Vq5YSgT6YIXpScQ="

before_cache:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cleanup; fi

before_install:

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start mongodb; fi

  # macOSX CI environment configuration: https://pythonhosted.org/CodeChat/.travis.yml.html
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      brew install openssl readline
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # I didn't do this above because it works and I'm lazy.
      brew outdated pyenv || brew upgrade pyenv
      # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
      # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
      brew install pyenv-virtualenv
      pyenv install $PYTHON
      # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
      # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
      # modify the Bash environment. ??? So, I hand-set the variables instead.
      export PYENV_VERSION=$PYTHON
      export PATH="/Users/travis/.pyenv/shims:${PATH}"
      pyenv-virtualenv venv
      source venv/bin/activate
      # A manual check that the correct version of Python is running.
      python --version

      pip -V

      pip install pipenv

    fi

  - echo "Decrypting twitter API keys..."
  - mkdir ~/.twitterfirescraper/
  - openssl aes-256-cbc -K $encrypted_797ea29282a1_key -iv $encrypted_797ea29282a1_iv -in secrets.json.enc -out ~/.twitterfirescraper/secrets.json -d

  - echo "Installing npm..."
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      bash continuous-integration/setup-scripts/install-npm.sh
    fi

script:

  - echo "I am script!"

  - echo "Testing the Twitter Fire Scraper."
  - bash continuous-integration/setup-scripts/test-tfs.sh

  - echo "The Twitter Fire Scraper Web API is starting up."
  - echo "Starting up Web API..."
  - bash continuous-integration/setup-scripts/start-tfs-webapi.sh

after_failure:

  - echo "Log of twitter-fire-scraper-webapi:"
  - cat /tmp/flask.log

  - echo "Error log of twitter-fire-scraper-webapi:"
  - cat /tmp/flask.error.log

  - echo "Log of twitter-fire-scraper-dashboard:"
  - cat /tmp/node.log

  - echo "Error log of twitter-fire-scraper-dashboard:"
  - cat /tmp/node.error.log
